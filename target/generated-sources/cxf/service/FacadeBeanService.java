package service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.4
 * 2021-08-14T22:50:06.793+03:00
 * Generated source version: 3.4.4
 *
 */
@WebServiceClient(name = "FacadeBeanService",
                  wsdlLocation = "classpath:/src/wsdl/FacadeBeanService.wsdl",
                  targetNamespace = "http://service/")
public class FacadeBeanService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service/", "FacadeBeanService");
    public final static QName FacadeBeanPort = new QName("http://service/", "FacadeBeanPort");
    static {
        URL url = FacadeBeanService.class.getClassLoader().getResource("/src/wsdl/FacadeBeanService.wsdl");
        if (url == null) {
            url = FacadeBeanService.class.getClassLoader().getResource("src/wsdl/FacadeBeanService.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(FacadeBeanService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:/src/wsdl/FacadeBeanService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FacadeBeanService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FacadeBeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FacadeBeanService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public FacadeBeanService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public FacadeBeanService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public FacadeBeanService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns MessageFacadeService
     */
    @WebEndpoint(name = "FacadeBeanPort")
    public MessageFacadeService getFacadeBeanPort() {
        return super.getPort(FacadeBeanPort, MessageFacadeService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MessageFacadeService
     */
    @WebEndpoint(name = "FacadeBeanPort")
    public MessageFacadeService getFacadeBeanPort(WebServiceFeature... features) {
        return super.getPort(FacadeBeanPort, MessageFacadeService.class, features);
    }

}
